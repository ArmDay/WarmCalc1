{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport db from './init';\nimport { collection, query, addDoc, getDocs } from 'firebase/firestore';\nexport default {\n  created: function created() {\n    this.getCountry();\n    this.getMaterials(); //this.CreatePlace()\n    //this.CreateMaterial()\n  },\n  data: function data() {\n    return {\n      checked: false,\n      NewMaterialWidth: 0,\n      NewTermResistA: 0,\n      NewTermResistB: 0,\n      NewName: \"\",\n      //    country: '',\n      strana: '',\n      region: '',\n      objecttype_select: '',\n      counttype_select: '',\n      naspunkt: {\n        Cold5dnevka: -35,\n        Gsop: 6199.4,\n        OtopPeriod: 223,\n        Vlazhnost: 78,\n        ZonaVlaz: \"Сухой\",\n        avgT: 1,\n        city: 'qwe',\n        country: \"Армения\"\n      },\n      material: '',\n      place: ' ',\n      selected: 'A',\n      sumteplo: 0,\n      difference: 0,\n      message: 0,\n      NewWidth: 0,\n      sumteploP: 0,\n      spisokstran: [\"Армения\", \"Россия\", \"Грузия\", \"Беларусь\", \"Казахстан\", \"Молдова\"],\n      countries: [],\n      places: [{\n        id: 1,\n        country: 'Россия',\n        Region: 'Воронежская область',\n        city: 'Воронеж',\n        Cold5dnevka: -24,\n        OtopPeriod: 190,\n        AvgT: -2.4,\n        Vlazhnost: 83,\n        Gsop: 4526.0,\n        ZonaVlaz: 'Нормальный'\n      }, {\n        id: 2,\n        country: 'Россия',\n        Region: 'Краснодарский край',\n        city: 'Краснодар',\n        Cold5dnevka: -15,\n        OtopPeriod: 146,\n        AvgT: 2.7,\n        Vlazhnost: 81,\n        Gsop: 2525.8,\n        ZonaVlaz: 'Сухой'\n      }, {\n        id: 3,\n        country: 'Россия',\n        Region: 'Ленинградская область',\n        city: 'Санкт-Петербург',\n        Cold5dnevka: -24,\n        OtopPeriod: 211,\n        AvgT: -1.2,\n        Vlazhnost: 86,\n        Gsop: 4473.2,\n        ZonaVlaz: 'Сухой'\n      }, {\n        id: 4,\n        country: 'Россия',\n        Region: 'Ставропольский край',\n        city: 'Ставрополь',\n        Cold5dnevka: -18,\n        OtopPeriod: 168,\n        AvgT: 0.6,\n        Vlazhnost: 83,\n        Gsop: 3259.2,\n        ZonaVlaz: 'Сухой'\n      }, {\n        id: 5,\n        country: 'Беларусь',\n        Region: 'Минская область',\n        city: 'Минск',\n        Cold5dnevka: -24,\n        OtopPeriod: 202,\n        AvgT: -1.6,\n        Vlazhnost: 86,\n        Gsop: 4363.2,\n        ZonaVlaz: 'Сухой'\n      }, {\n        id: 6,\n        country: 'Беларусь',\n        Region: 'Брестская область',\n        city: 'Брест',\n        Cold5dnevka: -21,\n        OtopPeriod: 186,\n        AvgT: 0.1,\n        Vlazhnost: 85,\n        Gsop: 3701.4,\n        ZonaVlaz: 'Нормальный'\n      }, {\n        id: 7,\n        country: 'Казахстан',\n        Region: 'Акмолинская область',\n        city: 'Астана',\n        Cold5dnevka: -31.2,\n        OtopPeriod: 209,\n        AvgT: -6.3,\n        Vlazhnost: 74,\n        Gsop: 5705.7,\n        ZonaVlaz: 'Сухой'\n      }, {\n        id: 8,\n        country: 'Казахстан',\n        Region: 'Алматинская область',\n        city: 'Алматы',\n        Cold5dnevka: -20.1,\n        OtopPeriod: 164,\n        AvgT: 0.4,\n        Vlazhnost: 65,\n        Gsop: 3214.4,\n        ZonaVlaz: 'Нормальный'\n      }, {\n        id: 9,\n        country: 'Молдова',\n        Region: 'Республика Молдова ',\n        city: 'Кишинев',\n        Cold5dnevka: -17,\n        OtopPeriod: 162,\n        AvgT: 0.6,\n        Vlazhnost: 81,\n        Gsop: 3142.8,\n        ZonaVlaz: 'Сухой'\n      }],\n      materials: [],\n      usedMaterials: []\n    };\n  },\n  //    {id: 1, name: 'Перлитобетон', termResistA: 0.44, termResistB: 0.5, width: 100 },\n  //    {id: 2, name: 'Фанера клееная',termResistA: 0.15, termResistB: 0.18, width: 100 },\n  //    {id: 3, name: 'Туфобетон', termResistA: 0.87, termResistB: 0.99, width: 100  },\n  //    {id: 4, name: 'Стекловата П-15', termResistA: 0.049, termResistB: 0.055, width: 100  },\n  //    {id: 5, name: 'Минеральная (каменная) вата',termResistA: 0.038, termResistB: 0.043, width: 100  },\n  //    {id: 6, name: 'Дуб',termResistA: 0.18, termResistB: 0.23, width: 100  },\n  //    {id: 7, name: 'Саман',termResistA: 0.58, termResistB: 0.69, width: 100 },\n  //    {id: 8, name: 'Цементно-песчаный раствор',termResistA: 0.21, termResistB: 0.26, width: 100 },\n  //    {id: 9, name: 'Щебень пеностекольный 100 кг/м³',termResistA: 0.065, termResistB: 0.067, width: 100 },\n  //    {id: 10, name: 'Песок для строительных работ',termResistA: 0.47, termResistB: 0.58, width: 100 },\n  //    {id: 11, name: 'Сталь',termResistA: 58, termResistB: 58, width: 100 } \n  //    {id: 1, country: 'Россия', city: 'Москва', Cold5dnevka: -26, OtopPeriod: 204, AvgT: -2.2, Vlazhnost: 84, Gsop: 4528.8, ZonaVlaz: 'Нормальный' },\n  //    {id: 2, country: 'Россия', city: 'Ростов-на-дону', Cold5dnevka: -18, OtopPeriod: 167, AvgT: 0, Vlazhnost: 85, Gsop: 3340.0, ZonaVlaz: 'Сухой'},\n  //    {id: 3, country: 'Россия', city: 'Тюмень', Cold5dnevka: -35, OtopPeriod: 223, AvgT: -6.8, Vlazhnost: 78, Gsop: 6199.4, ZonaVlaz: 'Сухой' },\n  //    {id: 4, country: 'Армения', city: 'Ереван', Cold5dnevka: -17, OtopPeriod: 140, AvgT: 1, Vlazhnost: 78, Gsop: 2660, ZonaVlaz: 'Сухой' },\n  //    {id: 5, country: 'Армения', city: 'Севан', Cold5dnevka: -18, OtopPeriod: 213, AvgT: -2, Vlazhnost: 81, Gsop: 4686.0, ZonaVlaz: 'Сухой' },\n  //    {id: 6, country: 'Армения', city: 'Ванадзор', Cold5dnevka: -15, OtopPeriod: 180, AvgT: 0.7, Vlazhnost: 69, Gsop: 3474.0, ZonaVlaz: 'Сухой' },\n  //    {id: 7, country: 'Грузия', city: 'Тбилиси', Cold5dnevka: -8, OtopPeriod: 121, AvgT: 4.1, Vlazhnost: 85, Gsop: 1923.9, ZonaVlaz: 'Сухой' },\n  //    {id: 8, country: 'Грузия', city: 'Цхинвали', Cold5dnevka: -4, OtopPeriod: 154, AvgT: 2.2, Vlazhnost: 85, Gsop: 2741.2, ZonaVlaz: 'Сухой' },\n  //    {id: 9, country: 'Грузия', city: 'Телави', Cold5dnevka: -8, OtopPeriod: 133, AvgT: 3.5, Vlazhnost: 85, Gsop: 2194.5, ZonaVlaz: 'Сухой' },\n  methods: {\n    CreatePlace: function CreatePlace() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var colRef;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                colRef = collection(db, 'places');\n\n                _this.places.forEach(function (element) {\n                  var dataObj = {\n                    Region: element.Region,\n                    Cold5dnevka: element.Cold5dnevka,\n                    Gsop: element.Gsop,\n                    OtopPeriod: element.OtopPeriod,\n                    Vlazhnost: element.Vlazhnost,\n                    ZonaVlaz: element.ZonaVlaz,\n                    avgT: element.AvgT,\n                    city: element.city,\n                    country: element.country\n                  };\n                  var docRef = addDoc(colRef, dataObj);\n                }); // console.log(\"Document was created with id \", docRef.id)\n\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getCountry: function getCountry() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var querySnap;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getDocs(query(collection(db, 'places')));\n\n              case 2:\n                querySnap = _context2.sent;\n                querySnap.forEach(function (doc) {\n                  // console.log(doc)\n                  _this2.countries.push(doc.data());\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    CreateMaterial: function CreateMaterial() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var col1Ref;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                col1Ref = collection(db, 'materials');\n\n                _this3.materials.forEach(function (element) {\n                  var dataObject = {\n                    name: element.name,\n                    termResistA: element.termResistA,\n                    termResistB: element.termResistB,\n                    width: 100,\n                    inside: 1,\n                    outside: 1,\n                    middle: 0\n                  };\n                  var doc1Ref = addDoc(col1Ref, dataObject);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getMaterials: function getMaterials() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var querySnap;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getDocs(query(collection(db, 'materials')));\n\n              case 2:\n                querySnap = _context4.sent;\n                querySnap.forEach(function (doc) {\n                  // console.log(doc)\n                  _this4.materials.push(doc.data());\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    //     AddMaterial() {\n    //     if (this.material!==null && this.material!=={} && this.NewWidth>0 && this.naspunkt.city!==\"qwe\") {\n    //     this.material.width=this.NewWidth;\n    //     this.usedMaterials.push(this.material);\n    //     this.PredvaritelniyCount()\n    //     this.difference =  ((this.naspunkt.OtopPeriod*(20-this.naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2) - this.sumteploP\n    //     console.log(this.difference)\n    //     }\n    //   },\n    AddNewMaterial: function AddNewMaterial() {\n      console.log('region', this.region);\n      console.log('g', this.g);\n      console.log('r', this.r);\n      console.log('nasp', this.naspunkt);\n\n      if (this.NewMaterialWidth !== 0 && this.NewTermResistA !== 0 && this.NewTermResistB !== 0 && this.NewName !== null) {\n        var dataObject = {\n          name: this.NewName,\n          termResistA: this.NewTermResistA,\n          termResistB: this.NewTermResistB,\n          width: this.NewMaterialWidth,\n          inside: 1,\n          outside: 1,\n          middle: 0\n        }; // b = {\n        //     NewMaterialWidth: this.NewMaterialWidth,\n        //     NewTermResistA: this.termResistA,\n        //     NewTermResistB: this.termResistB,\n        //     NewName: this.NewName,\n        //     }\n        // console.log(this.NewMaterialWidth)\n        // console.log(this.NewTermResistA)\n        // console.log(this.NewTermResistB)\n        // console.log(this.NewName)\n\n        this.usedMaterials.push(dataObject);\n        this.PredvaritelniyCount();\n        this.difference = ((this.naspunkt.OtopPeriod * (20 - this.naspunkt.avgT) * 0.00035 + 1.4) * 0.63).toFixed(2) - this.sumteploP;\n      }\n    },\n    AddMaterial: function AddMaterial() {\n      console.log('strana', this.strana);\n      console.log('region', this.region);\n      console.log('g', this.g);\n      console.log('r', this.r);\n      console.log('nasp', this.naspunkt);\n\n      if (this.material !== null && this.material !== {} && this.NewWidth > 0 && this.naspunkt.city !== \"qwe\") {\n        this.material.width = this.NewWidth;\n        this.usedMaterials.push(this.material);\n        this.PredvaritelniyCount();\n        this.difference = ((this.naspunkt.OtopPeriod * (20 - this.naspunkt.avgT) * 0.00035 + 1.4) * 0.63).toFixed(2) - this.sumteploP;\n        console.log(this.difference);\n      }\n    },\n    PredvaritelniyCount: function PredvaritelniyCount() {\n      var _this5 = this;\n\n      this.sumteploP = 0;\n      console.log('sumteplo v pr', this.sumteploP, _typeof(this.sumteploP));\n      this.usedMaterials.forEach(function (element) {\n        _this5.sumteploP += element.width * 0.0001 / element.termResistA;\n      });\n      console.log('sumteplo v pr 2', this.sumteploP, _typeof(this.sumteploP));\n      this.sumteploP += 1 / 8.7 + 1 / 23;\n    },\n    CountTeplo: function CountTeplo() {\n      var _this6 = this;\n\n      this.sumteplo = 0;\n      this.usedMaterials.forEach(function (element) {\n        _this6.sumteplo += element.width * 0.0001 / element.termResistA;\n      });\n      this.sumteplo += 1 / 8.7 + 1 / 23;\n    },\n    RemoveLayer: function RemoveLayer(i) {\n      this.usedMaterials.splice(i, 1);\n      this.PredvaritelniyCount();\n      this.difference = ((this.naspunkt.OtopPeriod * (20 - this.naspunkt.avgT) * 0.00035 + 1.4) * 0.63).toFixed(2) - this.sumteploP;\n      console.log(this.difference);\n    },\n    inputChange: function inputChange(event) {\n      this.NewWidth = event.target.value;\n    }\n  },\n  watch: {\n    p: function p(value) {\n      console.log('Material changed', value);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["created","data","checked","NewMaterialWidth","NewTermResistA","NewTermResistB","NewName","strana","region","objecttype_select","counttype_select","naspunkt","Cold5dnevka","Gsop","OtopPeriod","Vlazhnost","ZonaVlaz","avgT","city","country","material","place","selected","sumteplo","difference","message","NewWidth","sumteploP","spisokstran","countries","places","id","Region","AvgT","materials","usedMaterials","methods","CreatePlace","colRef","collection","getCountry","getDocs","querySnap","CreateMaterial","col1Ref","name","termResistA","termResistB","width","inside","outside","middle","getMaterials","AddNewMaterial","console","AddMaterial","PredvaritelniyCount","CountTeplo","RemoveLayer","i","inputChange","event","watch","p","value"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\n <div>\n  <form>\n<div>\n    <div class=\"row\"> \n        <hr>              \n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"country_id\">Страна</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            <select class=\"form-control tc-form-control geographic_select\" name=\"country_id\" id=\"country_id\" v-model=\"strana\">\n                                <option v-for=\"(s, idx) in spisokstran\" :key=\"idx\" :value=\"s\" > \n                                    <!-- {{spisokstran.push(s.country)}} -->\n                                    {{s}} \n                                </option> </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"region_id\">Регион</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            <div v-if=\"strana!=''\">\n                          <select class=\"form-control tc-form-control geographic_select\" aria-label=\".form-select-lg example\" v-model=\"region\" >\n                            <option v-for=\"(g, idx1) in countries.filter((stra)=>stra.country.includes(strana))\" :key=\"idx1\" :value=\"g.Region\"><div v-if=\"g.country==strana\">{{ g.Region }}</div></option>\n                            </select>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"city_id\">Населенный пункт</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            <div v-if=\"region!=''\">\n                          <select class=\"form-control tc-form-control geographic_select\" aria-label=\".form-select-lg example\" v-model=\"naspunkt\" >\n                            <option v-for=\"(r, idx) in countries.filter((reg)=>reg.Region.includes(region))\" :key=\"idx\" :value=\"r\"><div v-if=\"r.Region==region\">{{ r.city }}</div></option>\n                            </select>\n                        </div>\n                        <div v-else><b>Выберите страну</b></div>\n        </div>\n                    </div>\n                </div>\n            </div>\n             <hr>  <table class=\"table table-striped-columns\"><tr><td>Температура холодной пятидневки с обеспеченностью 0.92</td> <td> {{naspunkt.Cold5dnevka}} ˚С</td></tr>\n    <tr><td>Продолжительность отопительного периода </td> <td>{{naspunkt.OtopPeriod}} суток</td></tr>\n    <tr><td>Относительная влажность воздуха наиболее холодного месяца</td> <td>{{naspunkt.Vlazhnost}} % </td></tr>\n    <tr><td>Количество градусо-суток отопительного периода (ГСОП)\t</td> <td> {{naspunkt.Gsop}} °С•сут</td></tr>\n     <tr><td>Базовое значение поэлементных требований R(треб)</td> <td> {{(naspunkt.OtopPeriod*(20-naspunkt.avgT)*0.00035+1.4).toFixed(2)}}</td></tr>\n    \n      <tr><td>Нормируемое значение поэлементных требований R(норм)</td> <td> {{((naspunkt.OtopPeriod*(20-naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2)}}</td></tr>\n  </table><hr>\n  <div class=\"row\"> \n                    \n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"country_id\">Помещение</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            <select id=\"room_select\" class=\"form-control tc-form-control\">\n                            <option value=\"0\" selected=\"selected\">Жилое помещение</option>\n                            <option value=\"1\">Кухня</option>\n                            <option value=\"2\">Ванная</option>\n                            <option value=\"3\">Ненормированное</option>\n                            <option value=\"4\">Техническое помещение</option>\n                        </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"region_id\">Тип финального слоя</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            <select id=\"constrtype_select\" class=\"form-control tc-form-control\">\n                            <option value=\"0\" selected=\"selected\">Внешний</option>\n                            <option value=\"1\">Перекрытие над проездом</option>\n                            <option value=\"3\">Перекрытие над холодным подвалом, сообщающимся с наружным воздухом</option>\n                            <option value=\"4\">Перекрытие над  не отапливаемым подвалом со световыми проемами в стенах</option>\n                            <option value=\"5\">Перекрытие над  не отапливаемым подвалом без световых проемов в стенах</option> \n                            <option value=\"2\">Чердачное перекрытие</option>\n                            <option value=\"9\">Покрытие (утепленная кровля)</option>\n                        </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4 col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12\">\n                            <label for=\"city_id\">Тип Вычислений</label>\n                        </div>\n                        <div class=\"col-xs-12\">\n                            \n                            <select id=\"counttype_select\" class=\"form-control tc-form-control\" v-model=\"counttype_select\">\n                            <option value=\"0\" selected=\"selected\">Подбор финального материала</option>\n                            <option value=\"1\">Теплотехнический расчёт готовой конструкции</option>\n                        </select>\n                        \n        </div>\n                    </div>\n                </div>\n            </div>\n  \n                </div>\n                \n \n  \n                        <div v-if=\"counttype_select=='0'\"><b><label for=\"objecttype_select\">Тип финального слоя</label>\n  <select id=\"objecttype_select\" class=\"form-control\" v-model=\"objecttype_select\">\n                            <option value=\"0\" selected=\"selected\">Внешний</option>\n                            <option value=\"1\">Внутренний</option>\n                            <option value=\"2\">Промежуточный</option>\n                        </select>   \n\n     </b></div> \n     <hr>\n                        <div class=\"panel-body\">\n            <div class=\"row\">               \n                <div class=\"col-sm-8\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <label><b>Климатические параметры внутри помещения</b>\n                        </label></div>                            \n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <label for=\"temp_int_id\">Температура</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <input class=\"form-control tc-form-control\" type=\"text\" id=\"temp_int_id\" value=\"20\" maxlength=\"2\" style=\"width: 4em;\">\n                                </div>    \n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <label for=\"hum_int_id\">Влажность</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <input class=\"form-control tc-form-control\" type=\"text\" id=\"hum_int_id\" value=\"55\" maxlength=\"3\" style=\"width: 4em;\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\" style=\"margin-top: 6px; margin-bottom: 8px;\">               \n                <div class=\"col-sm-8\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <label><b>Климатические параметры снаружи помещения</b>\n                        </label></div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <label for=\"temp_ext_id\">Температура</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                    <input class=\"form-control tc-form-control user-climat-data\" type=\"text\" id=\"temp_ext_id\" value=\"-10\" maxlength=\"3\" style=\"width: 4em;\">\n        \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <label for=\"hum_ext_id\">Влажность</label>\n                                </div>\n                                <div class=\"col-sm-4 col-sm-offset-2\">\n                                <input class=\"form-control tc-form-control user-climat-data\" type=\"text\" id=\"hum_ext_id\" value=\"85\" maxlength=\"3\" style=\"width: 4em;\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <hr>\n            <div v-if=\"checked && naspunkt.city!='qwe' && counttype_select!=''\">\n  <label><b>Название материала</b></label>\n  <div><input v-model=\"NewName\" ></div>  \n  <label><b>Коэффициент теплопроводности А</b></label>\n  <div><input type=\"number\" v-model.number=\"NewTermResistA\" ></div>  \n  <label><b>Коэффициент теплопроводности B</b></label>\n  <div><input type=\"number\" v-model=\"NewTermResistB\" ></div>  \n  <label><b>Введите толщину слоя(мм)</b></label>\n  <div><input type=\"number\" v-model.number=\"NewMaterialWidth\"></div>  \n  <div>\n  <button class=\"btn btn-success btn-sm\" @click.prevent=\"AddNewMaterial\">Добавить новый материал</button>\n</div>\n  </div>\n            \n         \n        </div>\n        <hr>\n  \n\n  \n  </form> \n <form>\n    <label for=\"checkbox\">Будете использовать материалы не из представленного каталога?</label>\n    <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\n        \n  \n  <div v-if=\"naspunkt.city!='qwe' && counttype_select!=''\">\n    <div>\n  <select v-model=\"material\">\n    <option v-for=\"(item2, index) in materials\" v-bind:key=\"item2\" v-bind:value=\"materials[index]\">{{materials[index].name}}</option>\n  </select>\n</div>\n\n  <label><b>Введите толщину слоя(мм)</b></label>\n  <div><input type=\"number\" v-model=\"NewWidth\" v-on:input=\"inputChange\"></div>  \n  <table><tr><td>Коэффициент теплопроводности А=</td><td> {{material.termResistA}}</td></tr></table>\n  <table><tr><td>Коэффициент теплопроводности B=</td><td> {{material.termResistB}}</td></tr></table>\n  <table><tr><td>Заданная толщина слоя =</td><td> {{NewWidth}}мм</td></tr></table> \n  <div><b>Норма - {{((naspunkt.OtopPeriod*(20-naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2)}}</b></div>\n  </div>\n  <div v-else>\n    <b>Чтобы выбирать материалы для конструкции необходимо выбрать город и тип расчёта</b>\n  </div>\n  \n  \n</form>\n\n\n   \n     \n     <button class=\"btn btn-success btn-sm\" @click=\"AddMaterial\">Добавить слой</button>\n     <hr>\n      \n     <div v-if=\"sumteplo>((naspunkt.OtopPeriod*(20-naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2)\"><b>{{sumteplo.toFixed(3)}} - хороший показатель. \n     </b></div>\n     <div v-else-if=\"sumteplo!==0\"><b>{{sumteplo.toFixed(3)}}&lt;{{(((naspunkt.OtopPeriod*(20-naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2))}} - недостаточный показатель. \n    </b></div>\n     <div v-if=\"usedMaterials.length!==0\">\n     <div v-for=\"(usedStuf,i) in usedMaterials\" v-bind:key=\"i\">{{usedStuf.name}} Толщина:{{usedStuf.width}}   <button class=\"btn-secondary\" v-on:click=\"RemoveLayer(i)\"><i class=\"bi bi-x-circle-fill\"></i></button> </div>\n     <div>\n     <button class=\"btn btn-primary\" type=\"button\" @click=\"CountTeplo\">Рассчитать</button> \n    </div>\n  </div> \n\n     \n      <div v-else>\n      <b>Материалов еще нет. Добавьте первый.</b>\n      </div>\n      <div v-if=\"usedMaterials.length!=0 && counttype_select==0 && objecttype_select!=''\">\n        <div><b>Возможные материалы для финального слоя и их толщины </b></div>\n    <div v-for=\"(item3, index1) in materials\" v-bind:key=\"item3\" v-bind:value=\"materials[index1]\">\n        <div v-if=\"objecttype_select==0\">\n            <div v-if=\"materials[index1].outside==1\"> {{materials[index1].name}} толщиной от {{(materials[index1].termResistA*difference*10000).toFixed(0)+1}}</div>\n        </div>\n        <div v-if=\"objecttype_select==1\">\n            <div v-if=\"materials[index1].inside==1\"> {{materials[index1].name}} толщиной от {{(materials[index1].termResistA*difference*10000).toFixed(0)+1}}</div>\n        </div>\n        <div v-if=\"objecttype_select==2\">\n            <div v-if=\"materials[index1].middle==1\"> {{materials[index1].name}} толщиной от {{(materials[index1].termResistA*difference*10000).toFixed(0)+1}} </div>\n        </div>\n    </div>\n    </div> \n</div>\n\n</template>\n\n<script>\nimport db from './init'\nimport {collection, query, addDoc, getDocs} from 'firebase/firestore'\n\nexport default {\n    created() {\n        this.getCountry()\n        this.getMaterials()\n        //this.CreatePlace()\n        //this.CreateMaterial()\n    },\n    data() {\n        return {\n            checked : false,\n            NewMaterialWidth: 0,\n            NewTermResistA: 0,\n            NewTermResistB: 0,\n            NewName: \"\",\n        //    country: '',\n            strana : '',\n            region : '',\n            objecttype_select: '',\n            counttype_select: '',\n           naspunkt: {\n                Cold5dnevka: -35,\n                Gsop: 6199.4,\n                OtopPeriod: 223,\n                Vlazhnost: 78,\n                ZonaVlaz: \"Сухой\",\n                avgT: 1,\n                city: 'qwe',\n                country: \"Армения\"\n           },\n           material: '',\n           place: ' ',\n           selected: 'A',\n           sumteplo: 0,\n           difference : 0,\n           message: 0,\n           NewWidth: 0,\n           sumteploP: 0,\n         spisokstran: [\"Армения\", \"Россия\", \"Грузия\", \"Беларусь\", \"Казахстан\", \"Молдова\"],\n         countries: [],\n         places: [\n           {id: 1, country: 'Россия', Region:'Воронежская область' ,city: 'Воронеж', Cold5dnevka: -24, OtopPeriod: 190, AvgT: -2.4, Vlazhnost: 83, Gsop: 4526.0, ZonaVlaz: 'Нормальный' },\n           {id: 2, country: 'Россия',Region:'Краснодарский край' , city: 'Краснодар', Cold5dnevka: -15, OtopPeriod: 146, AvgT: 2.7, Vlazhnost: 81, Gsop: 2525.8, ZonaVlaz: 'Сухой'},\n           {id: 3, country: 'Россия', Region:'Ленинградская область' ,city: 'Санкт-Петербург', Cold5dnevka: -24, OtopPeriod: 211, AvgT: -1.2, Vlazhnost: 86, Gsop: 4473.2, ZonaVlaz: 'Сухой' },\n           {id: 4, country: 'Россия',Region:'Ставропольский край' , city: 'Ставрополь', Cold5dnevka: -18, OtopPeriod: 168, AvgT: 0.6, Vlazhnost: 83, Gsop: 3259.2, ZonaVlaz: 'Сухой' },\n           {id: 5, country: 'Беларусь', Region:'Минская область' ,city: 'Минск', Cold5dnevka: -24, OtopPeriod: 202, AvgT: -1.6, Vlazhnost: 86, Gsop: 4363.2, ZonaVlaz: 'Сухой' },\n           {id: 6, country: 'Беларусь',Region:'Брестская область' , city: 'Брест', Cold5dnevka: -21, OtopPeriod: 186, AvgT: 0.1, Vlazhnost: 85, Gsop: 3701.4, ZonaVlaz: 'Нормальный' },\n           {id: 7, country: 'Казахстан',Region:'Акмолинская область' , city: 'Астана', Cold5dnevka: -31.2, OtopPeriod: 209, AvgT: -6.3, Vlazhnost: 74, Gsop: 5705.7, ZonaVlaz: 'Сухой' },\n           {id: 8, country: 'Казахстан', Region:'Алматинская область' ,city: 'Алматы', Cold5dnevka: -20.1, OtopPeriod: 164, AvgT: 0.4, Vlazhnost: 65, Gsop: 3214.4, ZonaVlaz: 'Нормальный' },\n           {id: 9, country: 'Молдова', Region:'Республика Молдова ' ,city: 'Кишинев', Cold5dnevka: -17, OtopPeriod: 162, AvgT: 0.6, Vlazhnost: 81, Gsop: 3142.8, ZonaVlaz: 'Сухой' },\n         ],\n         materials: [\n \n           \n         ],\n         usedMaterials:[], \n        }\n    },\n      //    {id: 1, name: 'Перлитобетон', termResistA: 0.44, termResistB: 0.5, width: 100 },\n        //    {id: 2, name: 'Фанера клееная',termResistA: 0.15, termResistB: 0.18, width: 100 },\n        //    {id: 3, name: 'Туфобетон', termResistA: 0.87, termResistB: 0.99, width: 100  },\n        //    {id: 4, name: 'Стекловата П-15', termResistA: 0.049, termResistB: 0.055, width: 100  },\n        //    {id: 5, name: 'Минеральная (каменная) вата',termResistA: 0.038, termResistB: 0.043, width: 100  },\n        //    {id: 6, name: 'Дуб',termResistA: 0.18, termResistB: 0.23, width: 100  },\n        //    {id: 7, name: 'Саман',termResistA: 0.58, termResistB: 0.69, width: 100 },\n        //    {id: 8, name: 'Цементно-песчаный раствор',termResistA: 0.21, termResistB: 0.26, width: 100 },\n        //    {id: 9, name: 'Щебень пеностекольный 100 кг/м³',termResistA: 0.065, termResistB: 0.067, width: 100 },\n        //    {id: 10, name: 'Песок для строительных работ',termResistA: 0.47, termResistB: 0.58, width: 100 },\n        //    {id: 11, name: 'Сталь',termResistA: 58, termResistB: 58, width: 100 } \n\n\n\n\n      //    {id: 1, country: 'Россия', city: 'Москва', Cold5dnevka: -26, OtopPeriod: 204, AvgT: -2.2, Vlazhnost: 84, Gsop: 4528.8, ZonaVlaz: 'Нормальный' },\n        //    {id: 2, country: 'Россия', city: 'Ростов-на-дону', Cold5dnevka: -18, OtopPeriod: 167, AvgT: 0, Vlazhnost: 85, Gsop: 3340.0, ZonaVlaz: 'Сухой'},\n        //    {id: 3, country: 'Россия', city: 'Тюмень', Cold5dnevka: -35, OtopPeriod: 223, AvgT: -6.8, Vlazhnost: 78, Gsop: 6199.4, ZonaVlaz: 'Сухой' },\n        //    {id: 4, country: 'Армения', city: 'Ереван', Cold5dnevka: -17, OtopPeriod: 140, AvgT: 1, Vlazhnost: 78, Gsop: 2660, ZonaVlaz: 'Сухой' },\n        //    {id: 5, country: 'Армения', city: 'Севан', Cold5dnevka: -18, OtopPeriod: 213, AvgT: -2, Vlazhnost: 81, Gsop: 4686.0, ZonaVlaz: 'Сухой' },\n        //    {id: 6, country: 'Армения', city: 'Ванадзор', Cold5dnevka: -15, OtopPeriod: 180, AvgT: 0.7, Vlazhnost: 69, Gsop: 3474.0, ZonaVlaz: 'Сухой' },\n        //    {id: 7, country: 'Грузия', city: 'Тбилиси', Cold5dnevka: -8, OtopPeriod: 121, AvgT: 4.1, Vlazhnost: 85, Gsop: 1923.9, ZonaVlaz: 'Сухой' },\n        //    {id: 8, country: 'Грузия', city: 'Цхинвали', Cold5dnevka: -4, OtopPeriod: 154, AvgT: 2.2, Vlazhnost: 85, Gsop: 2741.2, ZonaVlaz: 'Сухой' },\n        //    {id: 9, country: 'Грузия', city: 'Телави', Cold5dnevka: -8, OtopPeriod: 133, AvgT: 3.5, Vlazhnost: 85, Gsop: 2194.5, ZonaVlaz: 'Сухой' },\n    methods: {\n        async CreatePlace() {\n            const colRef =collection(db, 'places')\n            this.places.forEach(element =>{\n                const dataObj = {\n                Region: element.Region,\n                Cold5dnevka:element.Cold5dnevka,\n                Gsop: element.Gsop,\n                OtopPeriod: element.OtopPeriod,\n                Vlazhnost: element.Vlazhnost,\n                ZonaVlaz: element.ZonaVlaz,\n                avgT: element.AvgT,\n                city: element.city,\n                country: element.country\n            } \n                const docRef =  addDoc(colRef, dataObj)\n           \n            \n            })\n            \n\n            // console.log(\"Document was created with id \", docRef.id)\n        },\n        async getCountry()\n        {\n            const querySnap = await getDocs(query(collection(db,'places')))\n            querySnap.forEach((doc) => {\n                // console.log(doc)\n                this.countries.push(doc.data())\n                \n            })\n\n        },\n        async CreateMaterial() {\n            const col1Ref =collection(db, 'materials')\n            this.materials.forEach(element => {\n\n                const dataObject = {\n                name: element.name,\n                termResistA: element.termResistA,\n                termResistB: element.termResistB,\n                width: 100,\n                inside: 1,\n                outside: 1,\n                middle: 0\n            }\n           \n            const doc1Ref = addDoc(col1Ref, dataObject)\n        })\n        \n        },\n        async getMaterials()\n        {\n            const querySnap = await getDocs(query(collection(db,'materials')))\n            querySnap.forEach((doc) => {\n                // console.log(doc)\n                this.materials.push(doc.data())\n                \n            })\n\n        },\n    //     AddMaterial() {\n        \n    //     if (this.material!==null && this.material!=={} && this.NewWidth>0 && this.naspunkt.city!==\"qwe\") {\n    //     this.material.width=this.NewWidth;\n    //     this.usedMaterials.push(this.material);\n    //     this.PredvaritelniyCount()\n    //     this.difference =  ((this.naspunkt.OtopPeriod*(20-this.naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2) - this.sumteploP\n    //     console.log(this.difference)\n    //     }\n    //   },\n    \n      AddNewMaterial() {\n        \n        console.log('region',this.region)\n        console.log('g',this.g)\n        console.log('r',this.r)\n        console.log('nasp',this.naspunkt)\n        if (this.NewMaterialWidth!==0 && this.NewTermResistA!==0 && this.NewTermResistB!==0 && this.NewName!==null) {\n            const dataObject = {\n                name: this.NewName,\n                termResistA: this.NewTermResistA,\n                termResistB: this.NewTermResistB,\n                width: this.NewMaterialWidth,\n                inside: 1,\n                outside: 1,\n                middle: 0\n            }\n        // b = {\n        //     NewMaterialWidth: this.NewMaterialWidth,\n        //     NewTermResistA: this.termResistA,\n        //     NewTermResistB: this.termResistB,\n        //     NewName: this.NewName,\n\n        //     }\n        // console.log(this.NewMaterialWidth)\n        // console.log(this.NewTermResistA)\n        // console.log(this.NewTermResistB)\n        // console.log(this.NewName)\n       \n        this.usedMaterials.push(dataObject);\n    \n        this.PredvaritelniyCount()\n        this.difference =  ((this.naspunkt.OtopPeriod*(20-this.naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2) - this.sumteploP\n        \n        }\n    },\n      AddMaterial() {\n        console.log('strana',this.strana)\n        console.log('region',this.region)\n        console.log('g',this.g)\n        console.log('r',this.r)\n        console.log('nasp',this.naspunkt)\n        if (this.material!==null && this.material!=={} && this.NewWidth>0 && this.naspunkt.city!==\"qwe\") {\n        this.material.width=this.NewWidth;\n        this.usedMaterials.push(this.material);\n        this.PredvaritelniyCount()\n        this.difference =  ((this.naspunkt.OtopPeriod*(20-this.naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2) - this.sumteploP\n        console.log(this.difference)\n        }\n    },\n      PredvaritelniyCount() {\n        \n        this.sumteploP=0;\n        console.log('sumteplo v pr',this.sumteploP,typeof(this.sumteploP))\n        \n        this.usedMaterials.forEach(element => {\n          this.sumteploP+=(element.width*0.0001)/element.termResistA;\n         \n        });\n        console.log('sumteplo v pr 2',this.sumteploP,typeof(this.sumteploP))\n        this.sumteploP+=(1/8.7)+(1/23)\n      },\n      CountTeplo() {\n        \n        this.sumteplo=0;\n        this.usedMaterials.forEach(element => {\n          this.sumteplo+=(element.width*0.0001)/element.termResistA;\n        });\n        this.sumteplo+=(1/8.7)+(1/23)\n      },\n      RemoveLayer(i) {\n        this.usedMaterials.splice(i,1)\n        this.PredvaritelniyCount()\n        this.difference =  ((this.naspunkt.OtopPeriod*(20-this.naspunkt.avgT)*0.00035+1.4)*0.63).toFixed(2) - this.sumteploP\n        console.log(this.difference)\n        \n      },\n      inputChange(event) {\n        this.NewWidth=event.target.value\n      },\n    },\n   \n    watch: {\n      p(value) {\n        console.log('Material changed', value)\n      }\n    }\n    \n    \n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}